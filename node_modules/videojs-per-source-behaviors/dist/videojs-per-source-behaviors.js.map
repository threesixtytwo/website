{
  "version": 3,
  "sources": [
    "node_modules/videojs-spellbook/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/js/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar videojs = _interopDefault(require('video.js'));\n\nconst Html5 = videojs.getTech('Html5');\n\n// Video.js 5/6 cross-compatibility.\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n\n/**\n * For the most part, these are the events that occur early in the lifecycle\n * of a source, but there is considerable variability across browsers and\n * devices (not to mention properties like autoplay and preload). As such, we\n * listen to a bunch of events for source changes.\n *\n * @type {Array}\n */\nconst CHANGE_DETECT_EVENTS = [\n  'abort',\n  'emptied',\n  'loadstart',\n  'play'\n];\n\n/**\n * These events will indicate that the source is \"unstable\" (i.e. it might be\n * about to change).\n *\n * @type {Array}\n */\nconst UNSTABLE_EVENTS = [\n  'abort',\n  'emptied'\n];\n\n/**\n * These are the ad loading and playback states we care about.\n *\n * @type {Array}\n */\nconst AD_STATES = [\n  'ad-playback',\n  'ads-ready?',\n  'postroll?',\n  'preroll?'\n];\n\n/**\n * Applies per-source behaviors to a video.js Player object.\n */\nconst perSourceBehaviors = function() {\n  const perSrcListeners = [];\n  let cachedSrc;\n  let disabled = false;\n  let srcChangeTimer;\n  let srcStable = true;\n\n  /**\n   * Whether or not the player is in an ad state. Ideally, this function would\n   * not need to exist, but hooks provided by contrib-ads are not sufficient to\n   * cover all conditions at this time.\n   *\n   * @return {boolean}\n   *         whether the player is in an ad state or not\n   */\n  const isInAdPlayback = () =>\n    !!this.ads && typeof this.ads === 'object' && AD_STATES.indexOf(this.ads.state) > -1;\n\n  /**\n   * Creates an event binder function of a given type.\n   *\n   * @param  {boolean} isOne\n   *         Rather than delegating to the player's `one()` method, we want to\n   *         retain full control over when the listener is unbound (particularly\n   *         due to the ability for per-source behaviors to be toggled on and\n   *         off at will).\n   *\n   * @return {Function}\n   *         the per source binder function\n   */\n  const createPerSrcBinder = (isOne) => {\n    return function(first, second) {\n\n      // Do not bind new listeners when per-source behaviors are disabled.\n      if (this.perSourceBehaviors.disabled()) {\n        return;\n      }\n\n      const isTargetPlayer = arguments.length === 2;\n      const originalSrc = this.currentSrc();\n\n      // This array is the set of arguments to use for `on()` and `off()` methods\n      // of the player.\n      const args = [first];\n\n      // Make sure we bind here so that a GUID is set on the original listener\n      // and that it is bound to the proper context.\n      const originalListener = videojs.bind(\n        isTargetPlayer ? this : first,\n        arguments[arguments.length - 1]\n      );\n\n      // The wrapped listener `subargs` are the arguments passed to the original\n      // listener (i.e. the Event object and an additional data hash).\n      const wrappedListener = (...subargs) => {\n        const changed = this.currentSrc() !== originalSrc;\n\n        // Do not evaluate listeners if per-source behaviors are disabled.\n        if (this.perSourceBehaviors.disabled()) {\n          return;\n        }\n\n        if (changed || isOne) {\n          this.off(...args);\n        }\n\n        if (!changed) {\n          originalListener(...subargs);\n        }\n      };\n\n      // Make sure the wrapped listener and the original listener share a GUID,\n      // so that video.js properly removes event bindings when `off()` is passed\n      // the original listener!\n      wrappedListener.guid = originalListener.guid;\n\n      // If we are targeting a different object from the player, we need to include\n      // the second argument.\n      if (!isTargetPlayer) {\n        args.push(second);\n      }\n\n      args.push(wrappedListener);\n      perSrcListeners.push(args);\n\n      return this.on(...args);\n    };\n  };\n\n  this.perSourceBehaviors = {\n\n    /**\n     * Disable per-source behaviors on this player.\n     *\n     * @return {boolean}\n     */\n    disable: videojs.bind(this, function disable() {\n      this.clearTimeout(srcChangeTimer);\n      srcChangeTimer = null;\n      disabled = true;\n      return disabled;\n    }),\n\n    /**\n     * Whether per-source behaviors are disabled on this player.\n     *\n     * @return {boolean}\n     *         if the per-source behaviors are disabled\n     */\n    disabled() {\n      return disabled;\n    },\n\n    /**\n     * Enable per-source behaviors on this player.\n     *\n     * @return {boolean}\n     *         always returns true\n     */\n    enable() {\n      disabled = false;\n      return disabled;\n    },\n\n    /**\n     * Whether per-source behaviors are disabled on this player.\n     *\n     * @return {boolean}\n     *         if the per-source behaviors are enabled\n     */\n    enabled() {\n      return !disabled;\n    },\n\n    /**\n     * Whether or not the source is \"stable\". This will return `true` if the\n     * plugin feels that we may be about to change sources.\n     *\n     * @return {boolean}\n     *         Whether the source is stable or not\n     */\n    isSrcStable() {\n      return srcStable;\n    },\n\n    VERSION: '__VERSION__'\n  };\n\n  /**\n   * Bind an event listener on a per-source basis.\n   *\n   * @function onPerSrc\n   * @param  {String|Array|Component|Element} first\n   *         The event type(s) or target Component or Element.\n   *\n   * @param  {Function|String|Array} second\n   *         The event listener or event type(s) (when `first` is target).\n   *\n   * @param  {Function} third\n   *         The event listener (when `second` is event type(s)).\n   *\n   * @return {Player}\n   */\n  this.onPerSrc = createPerSrcBinder();\n\n  /**\n   * Bind an event listener on a per-source basis. This listener can only\n   * be called once.\n   *\n   * @function onePerSrc\n   * @param  {String|Array|Component|Element} first\n   *         The event type(s) or target Component or Element.\n   *\n   * @param  {Function|String|Array} second\n   *         The event listener or event type(s) (when `first` is target).\n   *\n   * @param  {Function} third\n   *         The event listener (when `second` is event type(s)).\n   *\n   * @return {Player}\n   */\n  this.onePerSrc = createPerSrcBinder(true);\n\n  // Clear out perSrcListeners cache on player dispose.\n  this.on('dispose', () => {\n    perSrcListeners.length = 0;\n  });\n\n  this.on(CHANGE_DETECT_EVENTS, (e) => {\n\n    // Bail-out conditions.\n    if (\n      this.perSourceBehaviors.disabled() ||\n      srcChangeTimer ||\n      isInAdPlayback(this)\n    ) {\n      return;\n    }\n\n    // If we did not previously detect that we were in an unstable state and\n    // this was an event that qualifies as unstable, do that now. In the future,\n    // we may want to restrict the conditions under which this is triggered by\n    // checking networkState and/or readyState for reasonable values such as\n    // NETWORK_NO_SOURCE and HAVE_NOTHING.\n    if (\n      srcStable &&\n      UNSTABLE_EVENTS.indexOf(e.type) > -1\n    ) {\n      srcStable = false;\n      this.trigger('sourceunstable');\n    }\n\n    // Track any and all interim events from this one until the next tick\n    // when we evaluate the timer.\n    const interimEvents = [];\n\n    const addInterimEvent = (f) =>\n      interimEvents.push({time: Date.now(), event: f});\n\n    addInterimEvent(e);\n    this.on(Html5.Events, addInterimEvent);\n\n    srcChangeTimer = this.setTimeout(() => {\n      const currentSrc = this.currentSrc();\n\n      srcStable = true;\n      srcChangeTimer = null;\n      this.off(Html5.Events, addInterimEvent);\n\n      if (currentSrc && currentSrc !== cachedSrc) {\n\n        // Remove per-source listeners explicitly when we know the source has\n        // changed before we trigger the \"sourcechanged\" listener.\n        perSrcListeners.forEach(args => this.off(...args));\n        perSrcListeners.length = 0;\n\n        this.trigger('sourcechanged', {\n          interimEvents,\n          from: cachedSrc,\n          to: currentSrc\n        });\n\n        cachedSrc = currentSrc;\n      }\n    }, 1);\n  });\n};\n\nregisterPlugin('perSourceBehaviors', perSourceBehaviors);\nperSourceBehaviors.VERSION = '__VERSION__';\n\nmodule.exports = perSourceBehaviors;\n"
  ]
}